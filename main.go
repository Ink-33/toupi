package main

func main() {
	联系方式 := 皮条客()
	批, 是原批吗 := 联系方式.(*原批)
	if !是原批吗 {
		换行打印("批名：", 联系方式.名())
		恐慌("这啥玩楞，不是原批我不透")
	}
	最大次数 := 随机(30)
	if 最大次数==0{
		恐慌("你找到了"+string(批.批名)+"，但是警察来扫黄了。")
	}
	for 次数 := 0; 次数 < 最大次数; 次数++ {
		批.透()
	}
	数正字(批)
}

type 批 interface {
	透() 批
	名() 名
	几次() *次数
}

type 原批 struct {
	批名 名
	统计 *次数
}

type 次数 struct {
	透  正
	高潮 正
}

type 正 整数

type 名 字符串

func (批 *原批) 透() 批 {
	if 随机(2) == 1 {
		批.统计.高潮.写一笔()
	}
	批.统计.透.写一笔()
	return 批
}

func (批 *原批) 几次() *次数 {
	return 批.统计
}
func (批 *原批) 名() 名 {
	return 批.批名
}

type 假批 struct {
	批名 名
	统计 *次数
}

func (批 *假批) 透() 批 {
	if 随机(2) == 1 {
		批.统计.高潮.写一笔()
	}
	批.统计.透.写一笔()
	return 批
}

func (批 *假批) 几次() *次数 {
	return 批.统计
}
func (批 *假批) 名() 名 {
	return 批.批名
}

func 皮条客() 批 {
	if 随机(10) == 9 {
		return &假批{
			批名: "比利·海灵顿",
		}
	}
	return &原批{
		批名: 原批列表[随机(len(原批列表))],
		统计: &次数{透: 0, 高潮: 0},
	}
}

func (正字 *正) 写一笔() {
	*正字++
}

func 数正字(大腿 批) {
	透正字数量 := 大腿.几次().透 / 5
	多透次数 := 大腿.几次().透 % 5
	格式化打印("你透了%v%v个正字又%v次,高潮了%v次\n", 大腿.名(), 透正字数量, 多透次数, 大腿.几次().高潮)
}

var 原批列表 = [...]名{"优菈", "罗莎莉亚", "胡桃", "甘雨", "辛焱", "迪奥娜", "可莉", "芭芭拉", "刻晴", "北斗", "旅行者", "七七", "琴", "香菱", "安柏", "凝光", "菲谢尔", "丽莎", "砂糖", "诺艾尔", "莫娜"}
